@model List<ETC.Connector.Model.ETC.HKLivingInvoice>
@using ETC.B2B.WEB

@{
	/**/

	var paging = new Paging(10);
	paging.CalculatePages(Model.Count);
	var sortedList = Model.OrderBy(a => a.Date).Skip((int)paging.Skip).Take(paging.Take).ToList();
}


@if (Model.Count == 0)
{
	<div>No invoices found</div>
}
else
{
	<div class="row invoice head">
		<div class="col-md-8">
			invoice number
		</div>
		<div class="col-md-2">
			invoice date
		</div>
		<div class="col-md-2">
			total
		</div>
	</div>

	foreach (var invoice in sortedList)
	{

		<div class="row invoice">
			<div class="col-md-8">
				@invoice.InvoiceNr
			</div>
			<div class="col-md-2">
				@invoice.Date.ToShortDateString()
			</div>
			<div class="col-md-2">
				@invoice.Total.ToString("C")
			</div>
		</div>
		<div class="invoiceitemswrapper">
			@if (invoice.HKLivingInvoiceItems.Count > 0)
			{
				<div class="row invoiceitem">
					<div class="col-md-2">
						Article number
					</div>
					<div class="col-md-6">
						name
					</div>
					<div class="col-md-2">
						quantity
					</div>
					<div class="col-md-2">
						price
					</div>
				</div>
				foreach (var invoiceItem in invoice.HKLivingInvoiceItems)
				{
					<div class="row invoiceitem">
						<div class="col-md-2">
							@invoiceItem.Code
						</div>
						<div class="col-md-6">
							@invoiceItem.Description
						</div>
						<div class="col-md-2">
							@invoiceItem.Quantity.ToString("0.##")
						</div>
						<div class="col-md-2">
							@((invoiceItem.TotalPriceEx + invoiceItem.TotalPriceVAT).ToString("C"))
						</div>
					</div>
				}
			}
			else
			{
				<div class="empty">
					No invoice line items available
				</div>
			}
		</div>
	}

	if (paging.TotalPages > 1)
	{
		//Paging
		<div class="row">
			@RenderPaging(paging, paging.CurrentPage)
		</div>
	}

}


@helper RenderPaging(Paging paging, long currentId)
	{
		/**/

		<a class="@(paging.CurrentPage > 1 ? "" : "disabled")" @(paging.CurrentPage > 1 ? "href=?page=" + paging.PreviousPage : "disabled")>< Vorige</a>

		if (paging.StartPageToShow > 1)
		{
			<a href="?page=1">1..</a><text>&nbsp;</text>
		}

		for (var i = paging.StartPageToShow; i <= paging.EndPageToShow; i++)
		{
			if (paging.CurrentPage == i)
			{
				@i<text>&nbsp;</text>
			}
			else
			{
				<a href="?page=@i">@i</a><text>&nbsp;</text>
			}
		}


		if (paging.EndPageToShow < paging.TotalPages)
		{
			<a href="?page=@paging.TotalPages">...@paging.TotalPages</a><text>&nbsp;</text>
		}


		<a class="@(paging.CurrentPage < paging.TotalPages ? "" : "disabled")" @(paging.CurrentPage < paging.TotalPages ? "href=?page=" + paging.NextPage : "disabled")>Volgende ></a>

}
