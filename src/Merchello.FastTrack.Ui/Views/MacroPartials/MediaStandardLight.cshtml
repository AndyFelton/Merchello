@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using umbraco.MacroEngines
@*  @Model.MacroParameters.Count // testen hoeveel Models in de Marco worden geladen en zitten? Wijkt dit af, dan zit er wellicht een fout in deze pagina. *@ 
@* @{ var myCustomParameter = Model.MacroParameters["subheader"].ToString();   } *@

@{

    string mediaIds = string.Empty;

    if (Model.MacroParameters.ContainsKey("Multiple Media Picker"))
    {
        mediaIds = Model.MacroParameters["Multiple Media Picker"] as string;
    }
}



@{
    // days = string.IsNullOrEmpty((string) Model.MacroParameters["slider text"]) 
    //? 0 : Convert.ToInt32(Model.MacroParameters["slider text"]);
}

@{
    //var ImageTitle = Model.MacroParameters.ContainsKey["slider text"];

     @*   if (Model.MacroParameters.ContainsKey("slider text"))
        {
        <text> "Its there" </text>
            }
        else
        {
        <text> "Not there" </text>
            } *@

    }

@* @Umbraco.RenderMacro("MediaCategorie", new {myCustomParameter="subheader"}) *@

@{
    var headermedia = Model.MacroParameters["Header Media"].ToString();
    var subheadermedia = Model.MacroParameters["Subheader Media"].ToString();
}


<center><h1><text>@Html.Raw(headermedia)</text> <text><span>@Html.Raw(subheadermedia)</span></text></h1></center>

@if (Request.Url.AbsolutePath.Contains("GetMacroResultAsHtmlForEditor"))
{

    <div class="hk_slider hk-homepage-slider">
                @if (mediaIds != null)
                {
                    <ul id="hk_media_slider" class="hk_media_display_list">
                        @foreach (var mediaId in mediaIds.Split(','))
                        {
                            var media = Umbraco.TypedMedia(mediaId);

                            @* a single image *@
                        if (media.DocumentTypeAlias == "Image")
                        {
                            @RenderBackend(media as Image);
                        }

                        @* a folder with images under it *@
                        foreach (var image in media.Children<Image>())
                        {
                            @RenderBackend(image);
                            }
                        }
                        </UL>
                }
</div>
}
else
{

        <div class="hk_slider hk-homepage-slider hk_slider_@Umbraco.Field("titleMain")">
            

                            @if (mediaIds != null)
                {
                                <ul id="hk_media_slider" class="hk_media_display_list">
                                    @foreach (var mediaId in mediaIds.Split(','))
                    {
                        var media = Umbraco.TypedMedia(mediaId);

                                        @* a single image *@
                                    if (media.DocumentTypeAlias == "Image")
                                    {
                                        @Render(media as Image);
                        }

                                    @* a folder with images under it *@
                                    foreach (var image in media.Children<Image>())
                                    {




                                        @Render(image);


                        }
                    }
                                    </ul>
                            }

</div>


        }

        @helper Render(Image item)
        {
        @* <a href="@item.Url" class="thumbnail"></a>
            <img src="@item.GetCropUrl(width:200, height:200)" alt="@item.Name" />*@

        <li class="img">

            @*
                @if (item.HasProperty("headermedia"))
                {
                    <h2 class='slider titel'>@(item.GetPropertyValue<string>("headermedia"))</h2>
                }
            *@
            <img src="@item.GetCropUrl(height:550)" data-lazy="@item.GetCropUrl(width:1170, height:425)" alt="" title="" data-lity />
        </li>
        }


        @helper RenderBackend(Image item)
        {

        <img src="@item.GetCropUrl(width:200, height:200)" alt="" data-lity />

}
